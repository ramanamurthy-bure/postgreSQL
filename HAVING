/************************************************ HAVING ********************************************************\
-> The HAVING clause allows us to filter after an aggregation has alrady taken place. 
Means after a GROUP BY clause.

    SELECT company,SUM(sales)
    FROM finance_table
    GROUP BY company

    SELECT company,SUM(sales)
    FROM finance_table
    WEHRE company !='Google'
    GROUP BY company
    
-> In the second statement, we have applied filter with WHERE clause before executing the GOURP BY.But what if we want
to filter based on SUM(sales)?

-> We cannot use WHERE again after the GROUP BY clause. So, to solve this we have HAVING clause.
    SELECT company,SUM(sales)
    FROM finance_table
    WEHRE company !='Google'
    GROUP BY company
    HAVING SUM(sales)>1000

-> HAVING allows us to use the aggregate result as a filter along with a GROUP BY
    SELECT company,SUM(sales)
    FROM finance_table
    GROUP BY company
    HAVING SUM(sales)>1000
    
*/

SELECT * FROM payment;

SELECT customer_id,SUM(amount) 
FROM payment
WHERE customer_id NOT IN(184,87,477)
GROUP BY customer_id

SELECT customer_id,SUM(amount) 
FROM payment
GROUP BY customer_id
HAVING SUM(amount) > 100
ORDER BY SUM(amount) DESC

SELECT * FROM customer;

SELECT store_id,COUNT(customer_id)
FROM customer
GROUP BY store_id

SELECT store_id,COUNT(customer_id)
FROM customer
GROUP BY store_id
HAVING COUNT(customer_id)>300

SELECT store_id,COUNT(*)
FROM customer
GROUP BY store_id
HAVING COUNT(*)>300

/*
Challenge Task-1:
-> We are launching a platinum service for our most loyal customers. We will assign platinum 
status to customers that have had 40 or more transaction payments.
-> What customer_ids are eligible for platinum status?
*/

SELECT * FROM payment;
SELECT customer_id,COUNT(amount)
FROM payment
GROUP BY customer_id
HAVING COUNT(amount) >=40


/*
Challenge Task-2:
-> What are the customer ids of customers who have spent more than $100 in payment transactions with our
staff_id member 2?
*/

SELECT customer_id,staff_id,SUM(amount)
FROM payment
GROUP BY customer_id,staff_id
HAVING staff_id = 2 AND SUM(amount)>100
ORDER BY SUM(amount)


SELECT customer_id,staff_id,SUM(amount)
FROM payment
WHERE staff_id=2
GROUP BY customer_id,staff_id
HAVING SUM(amount)>100
ORDER BY SUM(amount)







        
        













