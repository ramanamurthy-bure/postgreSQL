/************************************DISTINCT*************************************************************************\
-> The DISTINCT keyword operates on a column. The syntax looks like this:
-> SELECT DISTINCT column FROM table
-> To clarify which column DISTINCT is being applied to, you can also use parenthesis for clarity
-> SELECT DISTINCT(column) FROM table
-> It will work with or without parenthesis
-> Later on when we learn about adding more calls such as COUNT and DISTINCT together,
the parenthesis will be necessary
-> color_table:
            first_name        choice
            Zach              Green
            David             Green
            Claire            Yellow
            David             Red
-> SELECT DISTINCT first_name FROM color_table;
-> Output:
            first_name
            Zach
            David
            Claire
-> Given the previous example, we don't really know if the person with the name 'David' was a duplicate entry, or two
different people with the same first_name.
-> Calling DISTINCT here answered the question
=> What are the unique first_name's are there in the table?
-> It makes more sense to ask 'How many types of unique color choices were there?'
-> SELECT DISTINCT choice FROM color_table;
*/


SELECT * FROM film;

-- How many unique release_year we have in the film table?
SELECT DISTINCT release_year FROM film;

SELECT DISTINCT(release_year) FROM film;

SELECT DISTINCT(rental_rate) FROM film;


/** Situation**/
-- An australian visitor isn't familiar with MPAA movie ratings(e.g. PG,PG-13,R, etc...)
-- We want to know the types of ratings we have in our database
-- What ratings do we have available?
-- Use what you've learned about SELECT DISTINCT to retrieve the distinct rating types our films could have in our db
SELECT DISTINCT(rating) FROM film;







